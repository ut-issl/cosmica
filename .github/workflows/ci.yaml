name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  UV_VERSION: "0.8.x"
  UV_FROZEN: "1"
  UV_NO_SYNC: "1"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ruff:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}

      - uses: actions/setup-python@v6
        with:
          python-version-file: .python-version

      - name: Install ruff
        run: uv sync --only-group ruff

      - name: Run ruff
        run: uv run -- ruff check

  mypy:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version-file: .python-version

      - name: Install the project
        run: uv sync --no-dev --group typing

      - name: Run mypy
        run: uv run -- mypy .

  pytest:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version-file: .python-version

      - name: Install the project
        run: uv sync --no-dev --group test

      - name: Run pytest
        run: uv run -- coverage run -m pytest --import-mode importlib

      - name: Generate coverage report
        run: |
          uv run -- coverage report -m
          uv run -- coverage xml -o ./coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}

  build-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}

      - uses: actions/setup-python@v6
        with:
          python-version-file: .python-version

      - name: Install the project
        run: uv sync --no-dev --group docs

      - name: Build docs
        run: uv run -- mkdocs build

  collect:
    if: github.event.pull_request.draft == false
    needs: [ruff, mypy, pytest]
    runs-on: ubuntu-latest
    steps:
    - name: Collect results
      run: echo "All checks passed!"
