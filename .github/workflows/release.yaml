name: Publish Python üêç distribution üì¶ to PyPI and TestPyPI

on:
  workflow_dispatch:

env:
  UV_VERSION: "0.8.x"

jobs:
  create-tag:
    name: Create a Git tag
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
    - uses: actions/checkout@v5
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: ${{ env.UV_VERSION }}

    - uses: actions/setup-python@v6
      with:
        python-version-file: .python-version

    - name: Get the version
      id: get-version
      run: |
        echo "version=$(uv version --short)" >> "$GITHUB_OUTPUT"

    - name: Create a Git tag
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions"
        git fetch --tags
        git tag --annotate "v${{ steps.get-version.outputs.version }}" --message="v${{ steps.get-version.outputs.version }}"
        git push origin "v${{ steps.get-version.outputs.version }}"

  build:
    name: Build distribution üì¶
    needs:
    - create-tag
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
      with:
        persist-credentials: false
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: ${{ env.UV_VERSION }}

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version-file: .python-version

    - name: Build a binary wheel and a source tarball
      run: uv build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish Python üêç distribution üì¶ to PyPI
    needs:
    - build
    - publish-to-testpypi
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/cosmica
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v5
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Sign the Python üêç distribution üì¶ with Sigstore
      and upload them to GitHub Release
    needs:
    - publish-to-pypi
    - create-tag
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v5
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.1
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        v${{ needs.create-tag.outputs.version }}
        --draft
        --verify-tag
        --generate-notes
        --repo ${{ github.repository }}
        --target ${{ github.sha }}
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        v${{ needs.create-tag.outputs.version }} dist/**
        --repo ${{ github.repository }}

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/cosmica

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v5
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution üì¶ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  deploy-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
    - create-tag
    - publish-to-pypi
    steps:
    - uses: actions/checkout@v5

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: ${{ env.UV_VERSION }}

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version-file: .python-version

    - name: Set up Git
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git fetch --prune --unshallow

    - name: Install the project
      run: uv sync --no-dev --group docs

    - name: Deploy docs
      run: uv run -- mike deploy --push --update-aliases ${{ needs.create-tag.outputs.version }} latest
