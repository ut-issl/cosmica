[project]
name = "cosmica"
version = "0.3.0"
description = "COnstellation Satellite siMulator for optIcal CommunicAtion"
readme = "README.md"
requires-python = ">=3.12"
license = "MIT OR Apache-2.0"
license-files = ["LICENSE-APACHE", "LICENSE-MIT"]
authors = [
  { name = "Shunichiro Nomura", email = "nomura@space.t.u-tokyo.ac.jp" },
  { name = "VinÃ­cius Nery", email = "viniciusfnery@space.t.u-tokyo.ac.jp" },
  { name = "Kazuki Takashima", email = "takashima@space.t.u-tokyo.ac.jp" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dependencies = [
  "geopandas >=0.14.2",
  "matplotlib >=3.7.1",
  "networkx >=3.1",
  "numpy >=1.24.2",
  "pandas >=2.0.2",
  "pydantic >=2.7.4",
  "pymap3d >=3.0.1",
  "rich >=13.7.1",
  "sgp4 >=2.23",
  "skyfield >=1.46",
  "tqdm >=4.66.4",
  "typer >=0.12.3",
  "typing-extensions >=4.9.0",
]

[project.urls]
Documentation = "https://www.space.t.u-tokyo.ac.jp/cosmica/"
Issues = "https://github.com/ut-issl/cosmica/issues"
Repository = "https://github.com/ut-issl/cosmica"

[project.scripts]
cosmica = "cosmica.cli.main:app"

[dependency-groups]
dev = [
  "pre-commit>=4.3.0",
  "pydeps>=3.0.1",
  { include-group = "docs" },
  { include-group = "examples" },
  { include-group = "lint" },
  { include-group = "test" },
  { include-group = "typing" },
]
docs = [
  "black>=25.1.0",
  "griffe-typingdoc>=0.2.8",
  "mike>=2.1.3",
  "mkdocs-gen-files>=0.5.0",
  "mkdocs-literate-nav>=0.6.2",
  "mkdocs-material>=9.6.16",
  "mkdocs-section-index>=0.3.10",
  "mkdocstrings[python]>=0.30.0",
]
examples = ["marimo>=0.15.0"]
lint = ["deptry>=0.23.1", "import-linter>=2.4", { include-group = "ruff" }]
# Define the dedicated dependency group for ruff so we can use it in the CI.
ruff = ["ruff>=0.12.9"]
test = ["coverage>=7.10.4", "genbadge[coverage]>=1.1.2", "pytest>=8.4.1"]
typing = [
  "mkdocs-gen-files",
  "mypy>=1.17.1",
  "pandas-stubs>=2.3.0.250703",
  "pytest",
  "types-tqdm>=4.67.0.20250809",
  { include-group = "examples" },
]

[build-system]
requires = ["uv_build>=0.9,<0.10"]
build-backend = "uv_build"

[tool.coverage.run]
source = ["src/cosmica"]

[tool.coverage.report]
exclude_also = [
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  'class .*\bProtocol\):',
  '@(abc\.)?abstractmethod',
]

[tool.deptry.per_rule_ignores]
DEP004 = ["mkdocs_gen_files"]

[tool.importlinter]
root_package = "cosmica"

[[tool.importlinter.contracts]]
name = "COSMICA layered architecture"
type = "layers"
layers = [
  "cosmica.cli",
  "cosmica.visualization",
  "cosmica.comm_link | cosmica.dynamics | cosmica.topology | cosmica.scenario",
  "cosmica.dtos",
  "cosmica.models",
  "cosmica.utils",
]
# The following imports are allowed to break the layered architecture for now.
# TODO: Remove them.
ignore_imports = [
  "cosmica.topology.ground_to_constellation -> cosmica.dynamics",
  "cosmica.topology.intra_constellation -> cosmica.dynamics",
  "cosmica.topology.usersatellite_to_constellation -> cosmica.dynamics",
  "cosmica.topology.usersatellite_gateway_to_constellation -> cosmica.dynamics",
]

[[tool.importlinter.contracts]]
# TODO: Remove this rule when the experimental_packet_routing module is stable.
name = "Experimental packet routing should not be imported by other modules until it is stable"
type = "forbidden"
# Other modules are not listed as source_modules because
# they cannot import experimental_packet_routing due to the layered architecture.
source_modules = [
  "cosmica.cli",
  "cosmica.visualization",
  "cosmica.comm_link",
  "cosmica.dynamics",
  "cosmica.topology",
  "cosmica.scenario",
  "cosmica.dtos",
  "cosmica.models",
  "cosmica.utils",
]
forbidden_modules = ["cosmica.experimental_packet_routing"]

[tool.mypy]
[[tool.mypy.overrides]]
module = [
  "networkx",
  "matplotlib.*",
  "pymap3d.*",
  "mpl_toolkits.*",
  "geopandas.*",
  "pgmpy.*",
  "skyfield.*",
  "sgp4.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "-ra --verbose --verbose --capture=no --strict-markers --color=yes --log-cli-level=INFO"
testpaths = ["tests"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "PLR2004",  # magic numbers
  "S101",  # use of assert
  "G",  # logging format
  "D100",  # missing docstring in public module
  "D101",  # missing docstring in public class
  "D102",  # missing docstring in public method
  "D103",  # missing docstring in public function
  "D104",  # missing docstring in public package
  "D105",  # missing docstring in magic method
  "D107",  # missing docstring in __init__
  "D203",  # 1 blank line required before class docstring
  "D213",  # multi-line docstring summary should start at the second line
  "RET505",  # Unnecessary `else` after `return` statement
  "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
  "TD003",  # add link on issue into TODO
  "FIX002",  # Line contains TODO
  "ERA001",  # commented-out-code
  "PLR0913",  # Too many arguments in function definition
]
unfixable = [
  "F401",  # Prevent auto-fix for unused imports
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN201"]
"scripts/*" = ["INP001"]
"cosmica/cli/*" = ["UP007"]
"examples/**.py" = ["PLR1711", "ANN202", "B018", "ANN001", "INP001", "PLC0415"]
